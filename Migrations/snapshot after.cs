// <auto-generated />
using System;
using CryptoPortfolioTracker.Infrastructure;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace CryptoPortfolioTracker.Migrations
{
//    [DbContext(typeof(PortfolioContext))]
//    partial class PortfolioContextModelSnapshot : ModelSnapshot
//    {
//        protected override void BuildModel(ModelBuilder modelBuilder)
//        {
//#pragma warning disable 612, 618
//            modelBuilder.HasAnnotation("ProductVersion", "7.0.15");

//            modelBuilder.Entity("CryptoPortfolioTracker.Models.Account", b =>
//                {
//                    b.Property<int>("Id")
//                        .ValueGeneratedOnAdd()
//                        .HasColumnType("INTEGER")
//                        .HasColumnName("Id");

//                    b.Property<string>("About")
//                        .IsRequired()
//                        .HasColumnType("TEXT")
//                        .HasColumnName("About");

//                    b.Property<string>("Name")
//                        .IsRequired()
//                        .HasColumnType("TEXT")
//                        .HasColumnName("Name");

//                    b.HasKey("Id");

//                    b.ToTable("Accounts", (string)null);
//                });

//            modelBuilder.Entity("CryptoPortfolioTracker.Models.Asset", b =>
//                {
//                    b.Property<int>("Id")
//                        .ValueGeneratedOnAdd()
//                        .HasColumnType("INTEGER")
//                        .HasColumnName("Id");

//                    b.Property<int>("AccountId")
//                        .HasColumnType("INTEGER")
//                        .HasColumnName("AccountId");

//                    b.Property<double>("AverageCostPrice")
//                        .HasColumnType("REAL")
//                        .HasColumnName("AverageCostPrice");

//                    b.Property<int>("CoinId")
//                        .HasColumnType("INTEGER")
//                        .HasColumnName("CoinId");

//                    b.Property<double>("Qty")
//                        .HasColumnType("REAL")
//                        .HasColumnName("Qty");

//                    b.Property<double>("RealizedPnL")
//                        .HasColumnType("REAL")
//                        .HasColumnName("RealizedPnL");

//                    b.HasKey("Id");

//                    b.HasIndex("AccountId");

//                    b.HasIndex("CoinId");

//                    b.ToTable("Assets", (string)null);
//                });

//            modelBuilder.Entity("CryptoPortfolioTracker.Models.Coin", b =>
//                {
//                    b.Property<int>("Id")
//                        .ValueGeneratedOnAdd()
//                        .HasColumnType("INTEGER")
//                        .HasColumnName("Id");

//                    b.Property<string>("About")
//                        .IsRequired()
//                        .HasColumnType("TEXT")
//                        .HasColumnName("About");

//                    b.Property<string>("ApiId")
//                        .IsRequired()
//                        .HasColumnType("TEXT")
//                        .HasColumnName("ApiId");

//                    b.Property<double>("Ath")
//                        .HasColumnType("REAL")
//                        .HasColumnName("Ath");

//                    b.Property<double>("Change1Month")
//                        .HasColumnType("REAL")
//                        .HasColumnName("Change1Month");

//                    b.Property<double>("Change24Hr")
//                        .HasColumnType("REAL")
//                        .HasColumnName("Change24Hr");

//                    b.Property<double>("Change52Week")
//                        .HasColumnType("REAL")
//                        .HasColumnName("Change52Week");

//                    b.Property<string>("ImageUri")
//                        .IsRequired()
//                        .HasColumnType("TEXT")
//                        .HasColumnName("ImageUri");

//                    b.Property<bool>("IsAsset")
//                        .HasColumnType("INTEGER")
//                        .HasColumnName("IsAsset");

//                    b.Property<double>("MarketCap")
//                        .HasColumnType("REAL")
//                        .HasColumnName("MarketCap");

//                    b.Property<string>("Name")
//                        .IsRequired()
//                        .HasColumnType("TEXT")
//                        .HasColumnName("Name");

//                    b.Property<int>("NarrativeId")
//                        .HasColumnType("INTEGER");

//                    b.Property<string>("Note")
//                        .IsRequired()
//                        .HasColumnType("TEXT")
//                        .HasColumnName("Note");

//                    b.Property<double>("Price")
//                        .HasColumnType("REAL")
//                        .HasColumnName("Price");

//                    b.Property<long>("Rank")
//                        .HasColumnType("INTEGER")
//                        .HasColumnName("Rank");

//                    b.Property<string>("Symbol")
//                        .IsRequired()
//                        .HasColumnType("TEXT")
//                        .HasColumnName("Symbol");

//                    b.HasKey("Id");

//                    b.HasIndex("NarrativeId");

//                    b.ToTable("Coins", (string)null);
//                });

//            modelBuilder.Entity("CryptoPortfolioTracker.Models.Mutation", b =>
//                {
//                    b.Property<int>("Id")
//                        .ValueGeneratedOnAdd()
//                        .HasColumnType("INTEGER")
//                        .HasColumnName("Id");

//                    b.Property<int>("AssetId")
//                        .HasColumnType("INTEGER")
//                        .HasColumnName("AssetId");

//                    b.Property<int>("Direction")
//                        .HasColumnType("INTEGER")
//                        .HasColumnName("Direction");

//                    b.Property<double>("Price")
//                        .HasColumnType("REAL")
//                        .HasColumnName("Price");

//                    b.Property<double>("Qty")
//                        .HasColumnType("REAL")
//                        .HasColumnName("Qty");

//                    b.Property<int>("TransactionId")
//                        .HasColumnType("INTEGER")
//                        .HasColumnName("TransactionId");

//                    b.Property<int>("Type")
//                        .HasColumnType("INTEGER")
//                        .HasColumnName("Type");

//                    b.HasKey("Id");

//                    b.HasIndex("AssetId");

//                    b.HasIndex("TransactionId");

//                    b.ToTable("Mutations", (string)null);
//                });

//            modelBuilder.Entity("CryptoPortfolioTracker.Models.Narrative", b =>
//                {
//                    b.Property<int>("Id")
//                        .ValueGeneratedOnAdd()
//                        .HasColumnType("INTEGER")
//                        .HasColumnName("Id");

//                    b.Property<string>("About")
//                        .IsRequired()
//                        .HasColumnType("TEXT")
//                        .HasColumnName("About");

//                    b.Property<string>("Name")
//                        .IsRequired()
//                        .HasColumnType("TEXT")
//                        .HasColumnName("Name");

//                    b.HasKey("Id");

//                    b.ToTable("Narratives", (string)null);
//                });

//            modelBuilder.Entity("CryptoPortfolioTracker.Models.PriceLevel", b =>
//                {
//                    b.Property<int>("Id")
//                        .ValueGeneratedOnAdd()
//                        .HasColumnType("INTEGER")
//                        .HasColumnName("Id");

//                    b.Property<int>("CoinId")
//                        .HasColumnType("INTEGER")
//                        .HasColumnName("CoinId");

//                    b.Property<string>("Note")
//                        .IsRequired()
//                        .HasColumnType("TEXT")
//                        .HasColumnName("Note");

//                    b.Property<int>("Status")
//                        .HasColumnType("INTEGER")
//                        .HasColumnName("Status");

//                    b.Property<int>("Type")
//                        .HasColumnType("INTEGER")
//                        .HasColumnName("Type");

//                    b.Property<double>("Value")
//                        .HasColumnType("REAL")
//                        .HasColumnName("Value");

//                    b.HasKey("Id");

//                    b.HasIndex("CoinId");

//                    b.ToTable("PriceLevels", (string)null);
//                });

//            modelBuilder.Entity("CryptoPortfolioTracker.Models.Transaction", b =>
//                {
//                    b.Property<int>("Id")
//                        .ValueGeneratedOnAdd()
//                        .HasColumnType("INTEGER")
//                        .HasColumnName("TransactionId");

//                    b.Property<string>("Note")
//                        .IsRequired()
//                        .HasColumnType("TEXT")
//                        .HasColumnName("Note");

//                    b.Property<DateTime>("TimeStamp")
//                        .HasColumnType("TEXT")
//                        .HasColumnName("TimeStamp");

//                    b.HasKey("Id");

//                    b.ToTable("Transactions", (string)null);
//                });

//            modelBuilder.Entity("CryptoPortfolioTracker.Models.Asset", b =>
//                {
//                    b.HasOne("CryptoPortfolioTracker.Models.Account", "Account")
//                        .WithMany("Assets")
//                        .HasForeignKey("AccountId")
//                        .OnDelete(DeleteBehavior.Cascade)
//                        .IsRequired();

//                    b.HasOne("CryptoPortfolioTracker.Models.Coin", "Coin")
//                        .WithMany("Assets")
//                        .HasForeignKey("CoinId")
//                        .OnDelete(DeleteBehavior.Cascade)
//                        .IsRequired();

//                    b.Navigation("Account");

//                    b.Navigation("Coin");
//                });

//            modelBuilder.Entity("CryptoPortfolioTracker.Models.Coin", b =>
//                {
//                    b.HasOne("CryptoPortfolioTracker.Models.Narrative", "Narrative")
//                        .WithMany("Coins")
//                        .HasForeignKey("NarrativeId")
//                        .OnDelete(DeleteBehavior.Cascade)
//                        .IsRequired();

//                    b.Navigation("Narrative");
//                });

//            modelBuilder.Entity("CryptoPortfolioTracker.Models.Mutation", b =>
//                {
//                    b.HasOne("CryptoPortfolioTracker.Models.Asset", "Asset")
//                        .WithMany("Mutations")
//                        .HasForeignKey("AssetId")
//                        .OnDelete(DeleteBehavior.Cascade)
//                        .IsRequired();

//                    b.HasOne("CryptoPortfolioTracker.Models.Transaction", "Transaction")
//                        .WithMany("Mutations")
//                        .HasForeignKey("TransactionId")
//                        .OnDelete(DeleteBehavior.Cascade)
//                        .IsRequired();

//                    b.Navigation("Asset");

//                    b.Navigation("Transaction");
//                });

//            modelBuilder.Entity("CryptoPortfolioTracker.Models.PriceLevel", b =>
//                {
//                    b.HasOne("CryptoPortfolioTracker.Models.Coin", "Coin")
//                        .WithMany("PriceLevels")
//                        .HasForeignKey("CoinId")
//                        .OnDelete(DeleteBehavior.Cascade)
//                        .IsRequired();

//                    b.Navigation("Coin");
//                });

//            modelBuilder.Entity("CryptoPortfolioTracker.Models.Account", b =>
//                {
//                    b.Navigation("Assets");
//                });

//            modelBuilder.Entity("CryptoPortfolioTracker.Models.Asset", b =>
//                {
//                    b.Navigation("Mutations");
//                });

//            modelBuilder.Entity("CryptoPortfolioTracker.Models.Coin", b =>
//                {
//                    b.Navigation("Assets");

//                    b.Navigation("PriceLevels");
//                });

//            modelBuilder.Entity("CryptoPortfolioTracker.Models.Narrative", b =>
//                {
//                    b.Navigation("Coins");
//                });

//            modelBuilder.Entity("CryptoPortfolioTracker.Models.Transaction", b =>
//                {
//                    b.Navigation("Mutations");
//                });
//#pragma warning restore 612, 618
//        }
//    }
}
