<?xml version="1.0" encoding="utf-8"?>
<UserControl    
    x:Class="CryptoPortfolioTracker.Controls.NarrativesListViewControl"    
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"    
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"   
    xmlns:local="using:CryptoPortfolioTracker.Controls"    
    xmlns:converters="using:CryptoPortfolioTracker.Converters"    
    xmlns:views="using:CryptoPortfolioTracker.Views"    
    xmlns:helpers="using:CryptoPortfolioTracker.Helpers"    
    xmlns:models="using:CryptoPortfolioTracker.Models"    
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"    
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:muxc="using:Microsoft.UI.Xaml.Controls"
    xmlns:l="using:WinUI3Localizer"
    xmlns:ui="using:CommunityToolkit.WinUI"
    xmlns:toolkit="using:AK.Toolkit.WinUI3"
    mc:Ignorable="d">

    <UserControl.Resources>
        <Style x:Key="HorizontalSwipe" TargetType="ListViewItem" BasedOn="{StaticResource DefaultListViewItemStyle}">
            <Setter Property="MinHeight" Value="10"/>
            <Setter Property="Padding" Value="-8"/>
            <Setter Property="Margin" Value="0,-3,0,0"/>
            <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
            <Setter Property="VerticalContentAlignment" Value="Stretch"/>
            <Setter Property="BorderThickness" Value="0"/>
        </Style>
    </UserControl.Resources>

    <Grid Name="ColumnHeadersAndListView" Margin="15,0,5,0" Padding="10,8,0,0">
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="*"/>
        </Grid.RowDefinitions>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="0.9*"/>
            <ColumnDefinition Width="0.2*"/>
            <ColumnDefinition Width="0.2*"/>
            <ColumnDefinition Width="60"/>
        </Grid.ColumnDefinitions>

        <StackPanel Grid.Row="0" Grid.Column="0" Margin="10,0,0,5" VerticalAlignment="Bottom" Orientation="Horizontal">
            <local:ColumnHeaderButton
                x:Name="NameHeader"
                l:Uids.Uid="NarrativesLV_Name" 
                IsEnabled="{x:Bind converters:Functions.InvertBool(_viewModel.IsExtendedView), Mode=OneWay}"
                Margin="0,0,0,0"
                MinWidth="140"
                FontSize="12"
                FontStyle="Italic"
                VerticalAlignment="Bottom"
                HorizontalTextAlignment="Left"
                PointerHoverColor="Goldenrod"
                Group="{Binding SortGroup}"
                Command="{Binding SortOnNameNarrCommand}"
                CommandParameter="{Binding Path=SortingOrder, RelativeSource={RelativeSource Self}}"/>
            <CheckBox 
                x:Name="chkOnlyAssets"
                l:Uids.Uid="NarrativesLV_ShowOnlyAssets" x:FieldModifier="public" FontSize="12" FontStyle="Normal" 
                Margin="15,0,0,0" VerticalAlignment="Bottom" VerticalContentAlignment="Center"
                IsChecked="{Binding _narrativeService.ShowOnlyAssets, Mode=TwoWay}" 
                Command="{Binding ShowOnlyAssetsCommand}" 
                CommandParameter="{Binding Path=IsChecked, RelativeSource={RelativeSource Self}}"/>
        </StackPanel>

        <StackPanel Grid.Row="0" Grid.Column="1" Margin="0,0,0,5" VerticalAlignment="Bottom">
            <local:ColumnHeaderButton
                x:Name="CostBaseHeader"
                l:Uids.Uid="AssetsLV_MarketValue" 
                IsEnabled="{x:Bind converters:Functions.InvertBool(_viewModel.IsExtendedView), Mode=OneWay}" 
                Margin="0,0,0,0"
                FontSize="12"
                FontStyle="Italic"
                VerticalAlignment="Bottom"
                HorizontalTextAlignment="Right"
                PointerHoverColor="Goldenrod"
                SortingOrder="Descending"
                Group="{Binding SortGroup}"
                Command="{Binding SortOnCostBaseNarrCommand}"
                CommandParameter="{Binding Path=SortingOrder, RelativeSource={RelativeSource Self}}"/>
            <local:ColumnHeaderButton
                x:Name="MarketValueHeader"
                l:Uids.Uid="AssetsLV_CostBase" 
                IsEnabled="{x:Bind converters:Functions.InvertBool(_viewModel.IsExtendedView), Mode=OneWay}" 
                Margin="0,0,0,0"
                FontSize="12"
                FontStyle="Italic"
                VerticalAlignment="Bottom"
                HorizontalTextAlignment="Right"
                PointerHoverColor="Goldenrod"
                Group="{Binding SortGroup}"
                Command="{Binding SortOnMarketValueNarrCommand}"
                CommandParameter="{Binding Path=SortingOrder, RelativeSource={RelativeSource Self}}"/>
        </StackPanel>

        <StackPanel Grid.Row="0" Grid.Column="2" Margin="0,0,0,5" VerticalAlignment="Bottom">
            <local:ColumnHeaderButton
                x:Name="PnlHeader"
                l:Uids.Uid="AssetsLV_ProfitLoss" 
                IsEnabled="{x:Bind converters:Functions.InvertBool(_viewModel.IsExtendedView), Mode=OneWay}"
                Margin="0,0,0,0"
                FontSize="12"
                FontStyle="Italic"
                VerticalAlignment="Bottom"
                HorizontalTextAlignment="Right"
                PointerHoverColor="Goldenrod"
                Group="{Binding SortGroup}"
                Command="{Binding SortOnPnLNarrCommand}"
                CommandParameter="{Binding Path=SortingOrder, RelativeSource={RelativeSource Self}}"/>
            <local:ColumnHeaderButton 
                x:Name="PnlPercHeader"
                l:Uids.Uid="AssetsLV_ProfitLossPerc" 
                IsEnabled="{x:Bind converters:Functions.InvertBool(_viewModel.IsExtendedView), Mode=OneWay}" 
                Margin="0,0,0,0"
                FontSize="12"
                FontStyle="Italic"
                VerticalAlignment="Bottom"
                HorizontalTextAlignment="Right"
                PointerHoverColor="Goldenrod"
                Group="{Binding SortGroup}"
                Command="{Binding SortOnPnLPercNarrCommand}"
                CommandParameter="{Binding Path=SortingOrder, RelativeSource={RelativeSource Self}}"/>
        </StackPanel>

        <Rectangle Grid.Row="1" Grid.ColumnSpan="4" Fill="#eebc3f" Height="2" Margin="5,0,8,0"/>
        <TextBlock x:Name="proxy2" Width="0" Height="0" Grid.Row="1" Visibility="{x:Bind converters:Functions.FalseToVisible(_viewModel.IsExtendedView), Mode=OneWay}"/>

        <ListView x:Name="NarrativesListView" Grid.Row="2" Grid.ColumnSpan="4" x:FieldModifier="public" ItemsSource="{Binding _narrativeService.ListNarratives}" 
                  BorderBrush="Transparent" BorderThickness="1" IsItemClickEnabled="True" SelectionMode="Single" 
                  toolkit:ScrollBarExtensions.KeepVerticalExpanded="{Binding IsScrollBarsExpanded}"
                  ui:ListViewExtensions.Command="{Binding NarrativeItemClickedCommand}" SizeChanged="ListView_SizeChanged"
                  ItemContainerStyle="{StaticResource HorizontalSwipe}" ScrollViewer.VerticalScrollBarVisibility="Visible"
                  ScrollViewer.VerticalScrollMode="{x:Bind converters:Functions.TrueToScrollModeDisabled(_viewModel.IsExtendedView), Mode=OneWay}" 
                  CanReorderItems="False" AllowDrop="false" Margin="0,0,0,0">
            
            <ListView.ItemTemplate>
                <DataTemplate x:DataType="models:Narrative">
                    <UserControl>
                        <Grid AutomationProperties.Name="{x:Bind Id}">
                            <SwipeControl x:Name="NarrativesListViewSwipeContainer" Height="60">
                                <Grid VerticalAlignment="Center" Margin="2">
                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="auto"/>
                                    </Grid.RowDefinitions>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="0.9*"/>
                                        <ColumnDefinition Width="0.2*"/>
                                        <ColumnDefinition Width="0.2*"/>
                                        <ColumnDefinition Width="70"/>
                                    </Grid.ColumnDefinitions>
                                        
                                    <TextBlock x:Name="proxy" Text="proxy" helpers:AncestorSource.AncestorType="ListView" Visibility="Collapsed"/>
                                    <Border Grid.Column="0" Margin="10,0,0,0" VerticalAlignment="Center">    
                                        <RelativePanel Tag="{Binding}">
                                            <TextBlock Name="txtName" Height="30" Text="{Binding Name}" ToolTipService.ToolTip="{Binding About}" 
                                                       FontWeight="Bold" FontSize="{Binding DataContext.DataContext.FontLevel1, ElementName=proxy}" 
                                                       TextWrapping="Wrap" Margin="10,5,0,0"/>
                                            <GridView x:Name="IconGrid" x:FieldModifier="public" ItemsSource="{Binding Coins}"
                                                      RelativePanel.RightOf="txtName" RelativePanel.AlignTopWithPanel="True" VerticalAlignment="Stretch"
                                                      Margin="0,0,0,0" IsItemClickEnabled="True" SelectionMode="None" ItemClick="IconGrid_ItemClick"
                                                      PointerEntered="IconGrid_PointerEntered" PointerExited="IconGrid_PointerExited" 
                                                      Loaded="IconGridView_Loaded" ScrollViewer.HorizontalScrollMode="Enabled">
                                                <GridView.ItemContainerStyle>
                                                    <Style TargetType="GridViewItem" BasedOn="{StaticResource DefaultGridViewItemStyle}">
                                                        <Setter Property="Margin" Value="0,0,0,0"/>
                                                        <Setter Property="MinHeight" Value="20"/>
                                                    </Style>
                                                </GridView.ItemContainerStyle>

                                                <GridView.ItemsPanel>
                                                    <ItemsPanelTemplate>
                                                        <ItemsWrapGrid x:Name="MaxItemsWrapGrid" MaximumRowsOrColumns="1" Orientation="Vertical"
                                                            ItemWidth="24" ItemHeight="34" Margin="5,0,0,0" GroupPadding="0,0,0,0"
                                                            HorizontalAlignment="Center" VerticalAlignment="Center"/>
                                                    </ItemsPanelTemplate>
                                                </GridView.ItemsPanel>
                                                <GridView.ItemTemplate>
                                                    <DataTemplate x:Name="ImageOverlayTemplate" x:DataType="models:Coin">
                                                        <Image Name="Image" HorizontalAlignment="Left" Height="20" Width="39" Source="{x:Bind converters:Functions.StringToImageSource(ImageUri), Mode=OneWay}"/>
                                                    </DataTemplate>
                                                </GridView.ItemTemplate>
                                            </GridView>
                                        </RelativePanel>
                                    </Border>

                                    <Border Grid.Column="1" Margin="5,0,0,0" VerticalAlignment="Center" HorizontalAlignment="Stretch">
                                        <RelativePanel HorizontalAlignment="Right">
                                            <TextBlock Name="txtMarketValue" 
                                                       Text="{x:Bind converters:Functions.FormatValueToString(TotalValue,'$ {0:N0}'), Mode=OneWay}" 
                                                       FontWeight="Normal" FontSize="{Binding DataContext.DataContext.FontLevel2, ElementName=proxy}" 
                                                       RelativePanel.AlignRightWithPanel="True" TextAlignment="Right"/>
                                            <TextBlock Name="txtCostBase" 
                                                       Text="{x:Bind converters:Functions.FormatValueToString(CostBase,'$ {0:N0}'), Mode=OneWay}" 
                                                       RelativePanel.AlignRightWithPanel="True" RelativePanel.Below="txtMarketValue" 
                                                       FontSize="{Binding DataContext.DataContext.FontLevel3, ElementName=proxy}" TextAlignment="Right"/>
                                        </RelativePanel>
                                    </Border>

                                    <Border Grid.Column="2" Margin="5,0,0,0" VerticalAlignment="Center" HorizontalAlignment="Stretch">
                                        <RelativePanel HorizontalAlignment="Right">
                                            <TextBlock Name="txtProfitLoss" 
                                                       Text="{x:Bind converters:Functions.FormatValueToString(ProfitLoss,'$ {0:N0}'), Mode=OneWay}"  
                                                       FontWeight="Normal" FontSize="{Binding DataContext.DataContext.FontLevel2, ElementName=proxy}"  
                                                       RelativePanel.AlignRightWithPanel="True" TextAlignment="Right"/>
                                            <TextBlock Name="txtProfitLossPerc" 
                                                       Text="{x:Bind converters:Functions.FormatValueToString(ProfitLossPerc,'{0:0.00} %'), Mode=OneWay}" 
                                                       RelativePanel.AlignRightWithPanel="True" RelativePanel.Below="txtProfitLoss" 
                                                       FontSize="{Binding DataContext.DataContext.FontLevel3, ElementName=proxy}" TextAlignment="Right"
                                                       Foreground="{x:Bind converters:Functions.DoubleToColour(ProfitLossPerc,''), Mode=OneWay}"/>
                                        </RelativePanel>
                                    </Border>
                                
                                    <RelativePanel Grid.Column="3" HorizontalAlignment="Right" VerticalAlignment="Center" Margin="0,0,10,0">
                                        <CommandBar x:Name="HoverCommandBar" Visibility="{Binding Visibility, ElementName=proxy2, Mode=OneWay}" 
                                                    IsSticky="False" Background="Transparent" IsOpen="False" DefaultLabelPosition="Right">
                                            <CommandBar.SecondaryCommands>
                                                <AppBarButton l:Uids.Uid="NarrativesLV_Edit" Visibility="Visible" x:Name="HoverButtonEdit"  
                                                              Command="{Binding DataContext.DataContext.ShowNarrativeDialogToEditCommand, ElementName=proxy}"  
                                                              CommandParameter="{x:Bind}">
                                                    <FontIcon Glyph="&#xE70B;" FontWeight="Normal"/>
                                                </AppBarButton>
                                                <AppBarButton l:Uids.Uid="NarrativesLV_Delete" Icon="Delete" x:Name="HoverButtonDel" 
                                                              Command="{Binding DataContext.DataContext.DeleteNarrativeCommand, ElementName=proxy}" 
                                                              CommandParameter="{x:Bind}"/>
                                            </CommandBar.SecondaryCommands>
                                        </CommandBar>
                                    </RelativePanel>
                                </Grid>
                            </SwipeControl>
                        </Grid>
                    </UserControl>
                </DataTemplate>
            </ListView.ItemTemplate>
        </ListView>
        <muxc:TeachingTip x:Name="MyTeachingTipNarr" l:Uids.Uid="Narrative_TeachGeneral"
               PreferredPlacement="Center" PlacementMargin="0" Background="DarkGoldenrod">
            <muxc:TeachingTip.ActionButtonContent>
                <Button Content="Show me" Click="OnGetItClickedNarr"/>
            </muxc:TeachingTip.ActionButtonContent>
            <muxc:TeachingTip.CloseButtonContent>
                <Button Content="Dismiss" Click="OnDismissClickedNarr"/>
            </muxc:TeachingTip.CloseButtonContent>

        </muxc:TeachingTip>
    </Grid>
</UserControl>
